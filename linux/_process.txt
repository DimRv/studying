Запуск системы:
1. BIOS - интерфейс между аппаратной и программной частью
2. POST - этап теста устройств (память, диски) после int 19h который запукает первычный загрузчик
3. Первичный загрузчик считывается первые 512байт (446б - первичный загрузчик, 64б - разделы, 2б - проверки)
4. Вторичный загрузчик (GRUB\GRUB2\LILO) грузит ядро (kernel) и initrd (Initial Ram Disk) при необходимости (инициализация устройств, корня)
5. Ядро засукает init/systemd (PID=1)
6. init/systemd запускает уровни выполнения (runlevel)

GRUB - загрузчик, грузит системы на RAID, LVM-томах
/boot/grub/ - конфиги загрузчика
/etc/default/grub - изменение настроек
/etc/grub.d/ - скрипты GRUB:
- 00_header - загрузка параметров из /etc/default/grub
- 10_linux - поиск kernel
- 30_os-prober - строит записи для ОС, на других разделах
- 40_custom - свои записи в меню
update-grub - для примененния настроек после изменения /etc/default/grub
 
Ядро (kernel) - программа, обеспечивающая взаимодействие с устройствами, памятью, управление процессами, сетевое взаимодействие
Большая часть ядра - драйверы, для взаимодействия с аппаратными устройствами. Из-за большиго кол-ва разнообразного оборудования,
ядро может быть большим, уменьшая быстродействие. Драйверы выносятся в отдельные модули, увеличивая произодительность.
Такие модули могут быть загружены динамически, не требуя остановки системы.
initrd - загружает временный диск в оперативной памяти, ждет когда kernel загрузится в реальную файловую систему
Ядро запускает загрузчик /sbin/init (это ссылка на один из множества загрузчиков init-демонов, например:
- /lib/systemd/systemd
- /lib/sysvinit/init

systemd - диспетчер системы и служб, представляет концепцию юнитов:
- .service - системная служба
- .target - группа системных служб
- .automount - точка автоматического монтирования файловой системы
- .device - файлы устройств, распознаваемые ядром
- .mount - точка монтирования файловой системы
- .path - файл или каталог на фаловой системе
- .scope - процесс созданный из вне
- .slice - группа юнитов, организованных в иерархию, управляют системными процессами
- .snapshot - сохранение состояния systemd
- .socket - сокет коммутаций внутри процесса
- .swap - устройство или файл подкачки
- .timer  - таймер systemd

/usr/lib/systemd/system/ - юниты, распространяемыми RPM-пакетами
/run/systemd/system/ - юниты, созданные во время запуска
/etc/systemd/system/ - юниты, созданные системным администратором

/etc/inittab - определяет уровни выполнения (runlevels) init
/etc/rc?.d/ - запуск скриптов уровня выполнения (каталог содержит ссылки /etc/init.d)

Уровни выполнения (runlevel):
0 - останов
1 - однопользовательский
2 - многопользовательский безщ сетевых файловых систем
3 - полноценный многопользовательский
4 - не используется
5 - многопользвательский графический режим
6 - перезагрузка
S(s) - однопользовательский (не требует наличия /etc/inittab) использует /dev/console

Автозагрузка - размещение символической ссылки на программу в /etc/rc?.d/
K - kill
S - start

Targetы systemd:
poweroff.target, runlevel0.target - завершение работы
rescue.target, runlevel1.target - запуск аварийной оболочки
multiuser.target, runlevel2.target, runlevel3.target, runlevel4.target - многопользовательский без графики 
graphical.target, runlevel5.target - запуск с графическим окружением
reboot.target, runlevel6.target - перезагрузка


Системное ПО взаимодействует с ядром системы посредством функций - системных вызовов

Процесс - команда на стадии выполнения
Процесс - объект, которому выделено процессорное время
Процесс - ассинхронная работа
Демон - процесс дапущенный в фоновом режиме, отслеживают состояния определенной подсистемы. Вне контроля пользователя

Существуют типы процессов:
- интерактивные (пользовательские из терминала)
- пакетные (запускаются при минимальной нагрузке, например, для резервное копирование)
- демоны (не нужен человек)

Демоны:
- Standalone запускаемые init
- Transient запускаемые внешенией системой (xinetd) 

Основные Демоны:
- systemd (приводит к единообразию конфигурации и поведение других демонов)
- udisksd (монтирование, размонтирование, форматирование, подключение устройств)
- logind (авторизация пользователей)
- httpd (размещение веб сайтов)
- sshd (подключение по SSH)
- ftpd (FTP)
- crond (повторяющиеся задачи)

Для создания процесса ОС:
- присваивает процессу имя
- добавляет инфо о процессе в список процессов
- определяет приоритет процесса
- формирует блок управления процессом
- предоставляет процессу нужные ему ресурсы

Каждая выполняющаяся программа является процессом, имеющим определенный набор параметров
и находящимся в определенном состоянии

Некоторые параметры:
- адресное пространство
- идентификатор процесса PID
- идентификатор родительского процесса PPID
- приоритет процесса
- окружение процесса
- владелец процесса

Создание процессов:
- родительский процесс, с помощью функции fork(), порождает новый процесс, затем переходит либо в состояние ожидания,
пока новый процесс не завершится, либо продолжает выполнятся параллельно с дочерним
- область памяти нового процесса ограничена областью памяти родительского процесса, но только в режиме чтения
- дочерний процесс вызывает функцию exec() - выполняется

systemd - первый процесс в системе (раньше init PID=1)
Все процессы имеют родителя

Основные состояния процессов:
рождение - пассивное состояние, подготовка структуры для появления процесса
выполнение - активное состояние. Процесс выполняется процессором. (R)
ожидание - пассивное состояние, при котором процесс ожидает какое либо событие, например, ввода данных(S-sleep, T-stop, D-оживает ввода/вывода, K)
готовность (к выполнению) - пассивное состояние, причина не зависит от самого процесса (R)
смерть - процесс выполнился и удалилась его структура (X)
зобми - процесс в котором процесс выполнился, но его структура не удалилась (Z)

Сигнал - простейший способ взаимодействия с процессами
man 7 signal

Над процессами выполняются операции:
- создание (переход из рождения в готовность)
- запуск (из готовности в выполнение)
- уничтожение (из выполнения в смерть)
- восстановление (из готовности в выполнение)
- изменение приоритета (из выполнения в готовность)
- блокировка (из выполнения в ожидание)
- пробуждение (из ожидания в готовность)

Приоритет задается процессу при создании NI от -20 до +19

Команды:
init - смена уровня выполнения
ps - список запущенных процессов (a-все, u-user, x)
pstree - демонстрирует древовидную структуру процессов
top - процессы в реальном времени (-p PID)
free - инфо об использованной памяти
lscpu - инфо о процессорах
mpstat - инфо об использовании процессора (-p конкретные процесс)
kill - отправка сигналов процессу (-l - список сигналов, %n-номер проц)
nice - изменяет NI при запуске программы
renice - изменяет NI для запущенны процессов
command & - запуск команды в фоновом режиме
jobs - список фоновых команд и команд в фоновом режиме
bg - продолжает работу команды в фоне
fg - продолжает работу в обычном режиме
yes - отправляет бесконечный цикл вывода y
at - создание одиночной задачи, запускаемой в заданное время (-f изфайла, -m отправка письма, -v время выполнения)
batch - создание одиночной задачи, выполняемой при нагрузке меньше .8
atq - просмотр ожидающих заданий
crontab - создание пользовательских повторяющихся заданий cron (-e, -l)
service - управление демонами, использующие init-скрипты (start stop)
/etc/init.d/sendmail start - пример запуска вручную (аналог service)
grub2-mkconfig -o /boot/grub2/grub2.cfg - обновление конфигурации файла вручную
systemctl - управление службами systemd (list-units, status, start, stop, restart, enable, disable, get-default, set-default, isolate, emergency) --type --all

Планировщики заданий:
Cron, Anacron - повторяющиеся (crond)
at, batch - разовые (atd)

/etc/crontab - создание повторяющихся процессов (для root)
/var/spool/cron/crontabs/[user_name] - сюда записываются пользовательские
/etc/cron.d - дополнтельные конфигурационные файлы
/etc/cron.allow - добавление доступа
/etc/cron.deny - ограничение доступа
/etc/security/access.conf - ограничение доступа
/etc/init.d/ - некоторые демоны могут быть запущены отсюда (init)
/etc/systemd/system/ - содержит unit-файлы для запуска демонов


Демон cron каждую минуту просматривает файлы /etc/crontab, /etc/anacrontab
каталоги /etc/cron.d/, /var/spool/cron/ и загружает их в память. (пеезапускать демон не нужно)

GRUB CentOS:
#boot=/dev/sda
default=0
timeout=5
splashimage=(hd0,0)/boot/grub/splash.xpm.gz
hiddenmenu
title CentOS (2.6.18-194.el5PAE)
root (hd0,0)
kernel /boot/vmlinuz-2.6.18-194.el5PAE ro root=LABEL=/
initrd /boot/initrd-2.6.18-194.el5PAE.img