Регулярные выражения - специальным образом записанные строки, используемые для поиска совпадений по шаблону
Basic Regular Expression (BRE) - основной стандарт регулярных выражений
Extended Regular Expression (ERE) - расширенный стандарт


Основные инструменты:
grep - поиск подстрок удовлетворяющих поиску по регулярному выражению
find -regexp - поиск файла по регулярному
sed - строчный редактор
awk
perl

Ключи grep:
-v - инвертация критерия поиска (вывод строк НЕ соответствующих шаблону)
-i - поиск без учета регистра символов
-o - вывод не строки, а совпадение с шаблоном
-w - вывод строки, содержащее слово полностью

BRE:

^ - якорь начала строки
$ - якорь конца строки
. - обязательное наличие любого символа
* - присутствие или отсутствие символа множественное число раз
\ - экранирование символа
[] - множество из символов

[^] - недопустимые символы
[-] - диапазон символов
[:alnum:] - алфавитно-цифровые символы
[:alpha:] - алфавитные символы
[:digit:] - 0-9
[:lower:] - алфавитные символы нижнего регистра
[:upper:] - алфавитные символы верхнего регистра
[:space:] - пробельные символы

ERE:
() - группировка элементов
{n,m} - минимальное и максимальное число обязательных совпадений
? - совпадение с предыдущим элементом 0 или один раз
+ - совпадение с предыдущим элементом не менее 1 раза
| - чередование, один из символов

\b - граница слова

sed операции в команде
n1,n2 - диапазон строк от n1 до n2 включительно (нумерация строк начинается с 1)
p - (в конце команды) добавление строк к выводу
d - (в конце команды) удаление строк из вывода
s - (в начале команды) замена первого вхождения из шаблона1 на строку шаблона 2
y - (в начале команды) замена всех вхождений из шаблона1 на символы шаблона2
g - (в конце команды) выполнить команду для всех с
G - добавление пустой строки


awk - полноценный язык обработки текстовой информации.
Работает путем разбиения на отдельные поля (пробел - разделитель)

'{команды}' - сюда код команды awk:

awk '{print $3 $5}' - вывод 3, 5 полей ($0 - вся строка, NR-нумерация строки, $NF-последнее поле)
awk '/regexp/{act}' - выполнить действие со строкой удовлетворяющей regexp
! - инверсия regexp
awk '$3 < vla {print}' - значения меньше определенного
BEGIN{} - открытие блока кода входных данных
END{} - открытие блока кода выходных данных

